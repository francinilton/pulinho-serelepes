#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int menu(){
	
	
printf(" ______________________________\n");
printf("<   ########         #######  >\n");
printf("<   #      #       #          >\n");
printf("<   #     #       #           >\n");
printf("<   #####         ######      >\n");
printf("<   #                   #     >\n");
printf("<   #                    #    >\n");
printf("<   #            ########     >\n");
printf("<                             >\n");
printf("<   PULINHO      SERELEPE     >\n");
printf("<_____________________________>\n\n");


int y;
	
	printf("Digite:\n");
	printf("1 - para iniciar partida\n");
	printf("2 - para carregar partida\n");
	printf("3 - para ver replay da partida\n\n");
	printf("Escola uma opcao:\n\n");
	scanf("%d", &y);

	
	switch (y){
		case 1: 
		system("cls");
		printf("Iniciando Partida...\n\n");
		break;
		
		case 2:
		system("cls");
		printf("Carregandp Partida...\n");
		break;
		
		case 3:
		system("cls");
		printf("Iniciando Replay da partida...\n\n");
		break;
		
		default:
			system("cls");
			printf("Erro 440!\n");
			printf("Digite uma opcao correta\n\n");
	
	}

	system("cls");
	return 0;	
}

int exibirTabuleiro (char m[9][9]){
  int i, j;
  for(i=0; i<9; i++){
    for(j=0; j<9; j++){
      printf("%c\t", m[i][j]);
    }
    printf("\n");
  }
  return 1;
}

int posicaoMatriz(char L, int C, int *l, int *c){
    
    switch(L){
        case 'A':
        *l=0; break;
        case 'a':
        *l=0;  break;
        case 'B':
        *l=1;  break;
        case 'b':
        *l=1;  break;
        case 'C':
        *l=2;  break;
        case 'c':
        *l=2;  break;
        case 'D':
        *l=3;  break;
        case 'd':
        *l=3;  break;
        case 'E':
        *l=4;  break;
        case 'e':
        *l=4;  break;
        case 'F':
        *l=5;  break;
        case 'f':
        *l=5;  break;
        case 'G':
        *l=6;  break;
        case 'g':
        *l=6;  break;
        case 'H':
        *l=7;  break;
        case 'h':
        *l=7;  break;
        default:
        printf("\nO movimento realizado pelo jogador não é possível, digite o comando novamente:\n "); 
		 break;
        }
    
	switch(C){
        case 1:
        *c=0;  break;
        case 2:
        *c=1;  break;
        case 3:
        *c=2;  break;
        case 4:
        *c=3;  break;
        case 5:
        *c=4;  break;
        case 6:
        *c=5;  break;
        case 7:
        *c=6;  break;
        case 8:
        *c=7;  break;
        default:
        printf("\nO movimento realizado pelo jogador não é possível, digite o comando novamente \n");   
		break;
        }
    return 0;
    
}

int validaPeca(int j1, int j2,int l, int c, char matriz[9][9]){
    int a=0;
    if(j1==1&&matriz[l][c]=='X'){
        if(matriz[l-2][c-2]==' '||matriz[l-2][c]==' '||matriz[l-2][c+2]==' '||matriz[l][c-2]==' '||matriz[l+2][c-2]==' '&&(c-2)>=0&&(l-2)>=0)
            a++;
        else
            if(matriz[l-1][c-1]==' '||matriz[l-1][c]==' '||matriz[l-1][c+1]==' '||matriz[l][c-1]==' '||matriz[l+1][c-1]==' '&&(c-1)>=0&&(l-1)>=0)
                a++;
            else
                if(matriz[l][c+1]==' '||matriz[l][c+2]==' '||matriz[l+1][c]==' '||matriz[l+1][c+1]==' '||matriz[l+2][c]==' '||matriz[l+2][c+2]==' ')
                    a++;
                else{
                    printf("A casa escolhida pelo jogador possui uma peça que não pode mover\n");
                    return 0;
                }
    }
    else
        if(j2==1&&matriz[l][c]=='O'){
            if(matriz[l-2][c-2]==' '||matriz[l-2][c]==' '||matriz[l-2][c+2]==' '||matriz[l][c-2]==' '||matriz[l+2][c-2]==' '&&(c-2)>=0&&(l-2)>=0)
            a++;
            else
                if(matriz[l-1][c-1]==' '||matriz[l-1][c]==' '||matriz[l-1][c+1]==' '||matriz[l][c-1]==' '||matriz[l+1][c-1]==' '&&(c-1)>=0&&(l-1)>=0)
                a++;
                else
                    if(matriz[l][c+1]==' '||matriz[l][c+2]==' '||matriz[l+1][c]==' '||matriz[l+1][c+1]==' '||matriz[l+2][c]==' '||matriz[l+2][c+2]==' ')
                    a++;
                    else{
                        printf("A casa escolhida pelo jogador possui uma peça que não pode mover\n");
                        return 0;
                    }
        }
        else{
            printf("A casa escolhida pelo jogador possui uma peça que não pode mover\n");
            return 0;
        }
    if(a>=1){
        return 1;
    }
}

int validaMovimento(int x, int l, int c, char matriz[9][9]){
    switch(x){
        case 1: 
        if(matriz[l+1][c-1]==' '||matriz[l+2][c-2]==' '&&(c-1)>=0){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 2:
        if(matriz[l+1][c]==' '||matriz[l+2][c]==' '){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 3:
        if(matriz[l+1][c+1]==' '||matriz[l+2][c+2]==' '){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 4:
        if(matriz[l][c-1]==' '||matriz[l][c-2]==' '&&(c-1)>=0){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 5:
        if(1==1){//Alterar quando a função mover estiver pronta
        	//if função mover já fez um pulo encerra movimento, se não return 0
            return 1;
		}
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 6:
        if(matriz[l][c+1]==' '||matriz[l][c+2]==' '){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 7:
        if(matriz[l-1][c-1]==' '||matriz[l-2][c-2]==' '&&(c-1)>=0&&(l-1)>=0){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 8:
        if(matriz[l-1][c]==' '||matriz[l-2][c]==' '&&(l-1)>=0){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        case 9:
        if(matriz[l-1][c+1]==' '||matriz[l-2][c+2]==' '&&(l-1)>=0){
            return 1;
        }
        else{
            printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
            return 0;
        }
        break;
        default:
        printf("O movimento realizado pelo jogador não é possível, digite o comando novamente\n");
    }
}

int arquivo(){
	FILE *ps;  // ps = Pulinho Srelepes
    ps = fopen ("Pulinho_serelepes.txt", "w");  // abri o arquivo ou cria caso ele nao exista
    if (ps == NULL) {
       printf ("Houve um erro ao abrir o arquivo.\n");
       return 1;
    }
  
    fclose (ps);
    return 0;
	
}

int main(){
	
	menu();
	
    char L;
    int C, a;
    int x, j1, j2, l, c;
    int vitoria=0;
    a=0;
    while(vitoria==0){
        char matriz[9][9] = {{'X','X','X','X',' ',' ',' ',' ','A'},
                             {'X','X','X',' ',' ',' ',' ',' ','B'},
                             {'X','X',' ',' ',' ',' ',' ',' ','C'},
                             {'X',' ',' ',' ',' ',' ',' ',' ','D'},
                             {' ',' ',' ',' ',' ',' ',' ','O','E'},
                             {' ',' ',' ',' ',' ',' ','O','O','F'},
                             {' ',' ',' ',' ',' ','O','O','O','G'},
                             {' ',' ',' ',' ','O','O','O','O','H'},
                             {'1','2','3','4','5','6','7','8','+'}
                            };
        exibirTabuleiro(matriz);
        
        if(a==0){
            printf("Vez do jogador 1\n");
            j1=1;
            j2=0;
        }
        
        printf("Digite as coordenadas:\n");
        scanf("%c", &L);
        scanf("%d", &C);
        posicaoMatriz(L, C, &l, &c);
        
        while(validaPeca(j1, j2, l, c, matriz)==0){
            printf("Digite as coordenadas:\n");
            scanf("%c", &L);
            scanf("%d", &C);
            posicaoMatriz(L, C, &l, &c);
        }
        if(validaPeca(j1, j2, l, c, matriz)==1){
            printf("\nFaça o movimento: ");
	        scanf("%d", &x);
            
            while(validaMovimento(x, l, c, matriz)==0){
                scanf("%d", &x);
            }
            if(validaMovimento(x, l, c, matriz)==1){
                
                a++;
                
                ////  Aqui vai ficar as funções trocaTurno, mover e vitoria, no mínimo
                
            }
        }

        system("clear");
    }
    	arquivo();
    return 0;
}
